name: Dockerfile executions

on:
  push:

permissions:
  contents: read

jobs:
  docker-linux-execution:
    runs-on: ubuntu-latest
    env:
      TAG: nwfistere/jsonparce:ci
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4
    
      - name: Login to docker hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Setup Docker BuildX
        id: setup-buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          driver: cloud
          endpoint: "nwfistere/nwf"
          version: "lab:latest"

      - name: Build the Container
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          provenance: false
          tags: ${{ env.TAG }}
          file: ./docker/ubuntu/Dockerfile
          outputs: ${{ github.event_name == 'pull_request' && 'type=cacheonly' || 'type=registry' }}

      - name: Run GCC Release Strict
        id: run_gcc_release_strict
        run: |
          docker run -v .:/src -w /src --rm ${{ env.TAG }} /bin/bash -c \
            "./docker/ubuntu/entrypoint.sh \
              -s ON \
              -c /usr/bin/gcc \
              -x /usr/bin/g++ \
              -t 1 \
              -f Release \
              "

      - name: Run GCC Release Non-Strict
        id: run_gcc_release_non_strict
        run: |
          docker run -v .:/src -w /src --rm ${{ env.TAG }} /bin/bash -c \
            "./docker/ubuntu/entrypoint.sh \
              -s OFF \
              -c /usr/bin/gcc \
              -x /usr/bin/g++ \
              -t 1 \
              -f Release \
              "

      - name: Run Clang Release Strict
        id: run_clang_release_strict
        run: |
          docker run -v .:/src -w /src --rm ${{ env.TAG }} /bin/bash -c \
            "./docker/ubuntu/entrypoint.sh \
              -s ON \
              -c /usr/bin/clang \
              -x /usr/bin/clang++ \
              -t 1 \
              -f Release \
              "

      - name: Run Clang Release Non-Strict
        id: run_clang_release_non_strict
        run: |
          docker run -v .:/src -w /src --rm ${{ env.TAG }} /bin/bash -c \
            "./docker/ubuntu/entrypoint.sh \
              -s OFF \
              -c /usr/bin/clang \
              -x /usr/bin/clang++ \
              -t 1 \
              -f Release \
              "
              
  docker-windows-execution:
    runs-on: windows-latest
    env:
      TAG: nwfistere/jsonparce:ci
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4
    
      - name: Login to docker hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # - name: Setup Docker BuildX
      #   id: setup-buildx
      #   uses: docker/setup-buildx-action@v3
      #   with:
      #     install: true
      #     driver: cloud
      #     endpoint: "nwfistere/nwf"
      #     version: "lab:latest"

      # - name: Build the Container
      #   id: build
      #   uses: mr-smithers-excellent/docker-build-push@v6
      #   with:
      #     image: ${{ env.TAG }}
      #     registry: docker.io
      #     tags: ${{ env.TAG }}
      #     dockerfile: ./docker/windows/Dockerfile
      #     outputs: ${{ github.event_name == 'pull_request' && 'type=cacheonly' || 'type=registry' }}

      - name: Run MSVC Release Strict
        id: run_msvc_release_strict
        uses: philips-software/run-windows-docker-container-action@v1.1.0
        with:
          image: ${{ env.TAG }}@sha256:646257fcd8aff16c71980d202e0520945415a8e58502d4acc63d8a0be456ee24
          run: .\\docker\\windows\\entrypoint.ps1 -s ON -t ON -c Release

      - name: Run GCC Release Non-Strict
        id: run_gcc_release_non_strict
        run: |
          docker run -v .:C:\\src -w C:\\src --rm ${{ env.TAG }} ".\\docker\\windows\\entrypoint.ps1 \
              -s OFF \
              -t ON \
              -c Release \
              "